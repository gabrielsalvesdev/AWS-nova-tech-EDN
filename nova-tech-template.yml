AWSTemplateFormatVersion: '2010-09-09'
Description: Template para a aplicação web da NovaTech

Parameters:
  ProjectName:
    Type: String
    Default: 'novatech'

  VpcCIDR:
    Description: Endereço IP da VPC
    Type: String
    Default: 10.0.0.0/16
  
  PublicSubnetCIDR:
    Description: Endereço IP da subnet pública
    Type: String
    Default: 10.0.1.0/24
  
  PrivateSubnetCIDR:
    Description: Endereço IP da subnet privada
    Type: String
    Default: 10.0.2.0/24

  KeyName:
    Description: Nome da chave SSH para acesso às instâncias EC2
    Type: AWS::EC2::KeyPair::KeyName

  DbUsername:
    Type: String
  
  DbPassword:
    Type: String
    NoEcho: true

  BackupRetentionPeriod:
    Description: Número de dias para reter backups automáticos
    Type: Number
    Default: 7

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-vpc'

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-igw'

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-public-subnet'

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']  
      CidrBlock: !Ref PrivateSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-private-subnet'

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-public-route-table'

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-private-route-table'

  PrivateSubnetRouteTable 
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Acesso à instância web
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-web-sg'

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Acesso ao banco de dados
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref WebSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-database-sg'

  WebLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !Ref PublicSubnet
      SecurityGroups:
        - !Ref WebSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-web-elb'

  WebLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref WebLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref WebTargetGroup

  WebTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP
      TargetType: instance
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 5

  WebInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      ImageId: ami-0c55b159cbfafe1f0  # Substitua pela AMI desejada para a região principal
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - DeviceIndex: 0
          GroupSet:
            - !Ref WebSecurityGroup
          SubnetId: !Ref PrivateSubnet
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Comandos de configuração da instância EC2 aqui
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-web-instance'

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Grupo de sub-redes para o banco de dados
      SubnetIds:
        - !Ref PrivateSubnet

  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      Engine: mysql
      EngineVersion: 8.0.23
      MasterUsername: !Ref DbUsername
      MasterUserPassword: !Ref DbPassword
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      PreferredBack 

      PreferredBackupWindow: '01:00-02:00'
      PreferredMaintenanceWindow: 'Sun:03:00-Sun:04:00'
      MultiAZ: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-database'

  WebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: !Sub '${ProjectName}-web-acl'
      Scope: REGIONAL
      Description: ACL para a aplicação web
      DefaultAction:
        Allow: {}
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub '${ProjectName}-web-acl-metric'
      Rules:
        - Name: AWSManagedRulesCommonRuleSet
          Priority: 0
          OverrideAction:
            None: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesCommonRuleSet
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet

  Route53HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Sub '${ProjectName}.com'  # Substitua pelo nome do projeto

  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref Route53HostedZone
      Name: !Sub 'www.${ProjectName}.com'  # Substitua pelo nome do projeto
      Type: A
      AliasTarget:
        HostedZoneId: !GetAtt WebLoadBalancer.CanonicalHostedZoneNameID
        DNSName: !GetAtt WebLoadBalancer.DNSName

  DRSReplicationConfiguration:
    Type: AWS::DRS::ReplicationConfiguration
    Properties:
      SourceServerID: !Ref WebInstance
      RecoveryInstanceType: t3.micro
      # Substitua pela AMI desejada para a região de recuperação de desastre
      # Caso a AMI não esteja disponível em ambas as regiões, ajuste conforme necessário
      ImageId: ami-0c55b159cbfafe1f0  
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - DeviceIndex: 0
          GroupSet:
            - !Ref WebSecurityGroup
          SubnetId: !Ref PrivateSubnet
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Comandos de configuração da instância EC2 aqui
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-web-instance'

Outputs:
  WebsiteURL:
    Description: URL da aplicação web
    Value: !Sub 'http://${WebLoadBalancer.DNSName}'

  DatabaseEndpoint:
    Description: Endpoint do banco de dados RDS
    Value: !GetAtt DatabaseInstance.Endpoint.Address
